{"version":3,"sources":["Components/Item/Item.module.css","Components/BalanceSection/BalanceSection.module.css","Components/Transcript/Transcript.module.css","Components/UI/Button/Button.module.css","Components/UI/Input/Input.module.css","Components/UI/Input/index.js","Components/UI/Button/index.js","Components/Transcript/index.js","Components/Item/index.js","Components/ListItems/index.js","Components/BalanceSection/function.js","Components/BalanceSection/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","props","inputType","type","cls","classes","size","className","join","value","name","placeholder","onChange","Button","onClick","disabled","children","defaultProps","Transcript","handleValue","index","item","setVisible","useState","setValue","Fragment","close","map","_","i","history","key","details","Date","id","toLocaleString","split","parseFloat","e","target","Item","handleName","remove","visible","add","total","reduce","res","ListItems","store","onremove","initialStore","storeIncome","now","storeExpenses","JSON","parse","localStorage","getItem","console","log","massage","removeItem","title","includes","str","toLowerCase","trim","BalanceSection","state","line","handleChange","setState","reset","handleAdd","isNaN","newStore","push","handleRemove","window","confirm","filter","this","label","totalData","edit","toLocaleLowerCase","slice","length","setItem","stringify","alert","onSaveState","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a8ef74a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Item_Item__3e7YM\",\"value\":\"Item_value__26SKM\",\"name\":\"Item_name__3s8Yo\",\"index\":\"Item_index__3f0Lr\",\"add\":\"Item_add__AaNpS\",\"remove\":\"Item_remove__1K2Je\",\"total\":\"Item_total__1OlqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BalanceSection\":\"BalanceSection_BalanceSection__2LE2G\",\"label\":\"BalanceSection_label__2OC1G\",\"edit\":\"BalanceSection_edit__3XlLd\",\"total\":\"BalanceSection_total__3lst0\",\"totalData\":\"BalanceSection_totalData__1Io4B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Transcript\":\"Transcript_Transcript__3uOFr\",\"history\":\"Transcript_history__2Xyoy\",\"details\":\"Transcript_details__3jgCx\",\"close\":\"Transcript_close__2QOLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1mrMq\",\"primary\":\"Button_primary__2nxhy\",\"main\":\"Button_main__ENYwr\",\"small\":\"Button_small__lRKN_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1mwbt\",\"main\":\"Input_main__2R0vp\",\"middle\":\"Input_middle__3Z_RZ\",\"small\":\"Input_small__2EoZG\"};","import React from 'react'\nimport classes from './Input.module.css'\n\n\n\nconst Input = props => {\n  const inputType = props.type || 'text'\n  const cls = [classes.Input, classes[props.size]]\n  return (\n    <input className={cls.join(' ')}\n        type={inputType}\n        value={props.value}\n        name = {props.name}\n        placeholder = {props.placeholder}\n        onChange={props.onChange}\n        size = {props.size}\n    />\n      )\n}\n\nexport default Input","import React from 'react'\nimport classes from './Button.module.css'\n\nconst Button = props => {\n  const cls = [classes.Button, classes[props.type], classes[props.size]]\n  return <button\n      onClick={props.onClick}\n      className={cls.join(' ')}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n}\n\nButton.defaultProps = {\n  onClick: () => {},\n  disabled: false,\n  type: 'primary',\n  size: 'main'\n}\n\nexport default Button","import React, {useState} from 'react'\r\nimport classes from './Transcript.module.css'  \r\nimport Input from '../UI/Input'\r\nimport Button from '../UI/Button'\r\n\r\nconst Transcript = ({ handleValue, index, item, setVisible}) => {\r\n    const [value, setValue] = useState(0)\r\n    \r\n    return <React.Fragment> \r\n        <span className={classes.close} onClick={()=>setVisible(false)}>\r\n            &times;\r\n        </span>\r\n        {item.value.map((_, i) => _ ? \r\n        <div className={classes.history}\r\n            key={i}> \r\n            <span className={classes.details}> \r\n                {new Date(_.id).toLocaleString().split(\", \")[0]}\r\n            </span> \r\n            <span className={classes.details}>\r\n                {_.value}\r\n            </span>\r\n        </div> : null)}\r\n        <div className={classes.Transcript} >\r\n            <Button \r\n            onClick={() => {handleValue(index, parseFloat(value)); setValue(0)} }\r\n            disabled={!parseFloat(value)}\r\n            size={'small'}\r\n            >\r\n            добавить\r\n            </Button> \r\n            <Input\r\n            type='text'\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n            size={'small'}\r\n            />\r\n        </div>\r\n    </React.Fragment>\r\n}   \r\n\r\n\r\n\r\nexport default Transcript\r\n","import React, {useState} from 'react'\r\nimport classes from './Item.module.css'\r\nimport Transcript from '../Transcript'\r\nimport Input from '../UI/Input'\r\n\r\n\r\nconst Item = ({index, item, handleValue, handleName, remove}) => { \r\n    const [visible, setVisible] = useState(false)\r\n    \r\n    const total = () => item.value.reduce((res, i) => res += i.value ? i.value : i, 0)\r\n    return (\r\n    <React.Fragment>\r\n        <div className={classes.Item}>\r\n            <div className={classes.name}>\r\n                <span className={classes.index}>{index + 1} &ensp;</span>\r\n                <Input\r\n                    size={'middle'} \r\n                    value={item.name}\r\n                    onChange={(e) => handleName(index, e.target.value)}\r\n                />\r\n            </div>\r\n            <div className={classes.value}>\r\n                <span className={classes.add} \r\n                    onClick={() => setVisible(!visible)}>\r\n                    {!visible ? '+' : null}\r\n                </span>\r\n                <p className={classes.total}>{total()}</p>\r\n                <span className={classes.remove} \r\n                    onClick = {() => remove(item.id)}>&times;</span>\r\n            </div>\r\n        </div> \r\n        { visible ? \r\n            <Transcript \r\n                handleValue={handleValue}\r\n                index={index}\r\n                item={item}\r\n                setVisible={setVisible}\r\n        /> : null}\r\n    </React.Fragment>)\r\n}      \r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport Item from '../Item'\r\n\r\nconst ListItems = ({store, onremove, handleName, handleValue}) => \r\n    <div > {store.map((item, index) => \r\n        <Item key={item.id}\r\n            remove={onremove} \r\n            handleValue={handleValue}\r\n            handleName={handleName}\r\n            item={item} \r\n            index={index}\r\n            />)}\r\n    </div>\r\n\r\nexport default ListItems    \r\n\r\n","export const initialStore = (name) => {\r\n\r\n    const storeIncome = [{name:'Зарплата', id: Date.now()+1, value: []},\r\n                {name:'Премии', id: Date.now()+2, value: []},\r\n                {name:'Подарки', id: Date.now()+3, value: []}]\r\n\r\n    const storeExpenses = [{name:'Продукты', id: Date.now()+4, value: []},\r\n                {name:'Квартплата', id: Date.now()+5, value: []},\r\n                {name:'Одежда', id: Date.now()+6, value: []}]\r\n        \r\n    try{\r\n        const store = JSON.parse(localStorage.getItem(`store${name}`))\r\n        return store ? store : name === 'Income' ? storeIncome : storeExpenses\r\n    } catch (e) {\r\n        console.log(e.massage)\r\n        localStorage.removeItem(`store${name}`)       \r\n    }\r\n}\r\n\r\nexport const title = (name) => name === 'Income' ? 'Доходы' : 'Расходы'  \r\n\r\nexport const onSaveState = (name, store) => {\r\n    localStorage.removeItem(`store${name}`)\r\n    localStorage.setItem(`store${name}`, JSON.stringify(store))\r\n    alert(`Раздел ${title(name)} успешно сохранен`)\r\n}\r\n\r\nexport const includes = (store, str) => store.map(item => \r\n    item.name.toLowerCase()).includes(str.trim().toLowerCase())\r\n\r\nexport const  total = (store) => store.reduce((res, i) =>\r\nres += i.value.reduce((res, i) => res += i.value, 0), 0)    \r\n ","import React from 'react'\r\nimport Input from '../UI/Input'\r\nimport Button from '../UI/Button'\r\nimport ListItems from '../ListItems'\r\nimport {initialStore, title, \r\n    onSaveState, includes, total} from './function'\r\n\r\nimport  classes from './BalanceSection.module.css'\r\n\r\nclass BalanceSection extends React.Component { \r\n\r\n    state = {\r\n        line: '',\r\n        store:  initialStore(this.props.name) || []\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            line: e.target.value\r\n        })\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            line: ''\r\n        })\r\n    }\r\n\r\n    handleAdd = (value) => {\r\n        this.setState({\r\n            store: [...this.state.store, \r\n                {id: Date.now(), name: value, value: []}]\r\n        }, () => this.reset()\r\n        )\r\n    }\r\n\r\n    handleValue = ( index, value) => {\r\n        if(!isNaN(value)){\r\n        const newStore = this.state.store\r\n        newStore[index].value.push({'value': +value, 'id': Date.now()})\r\n        this.setState({\r\n            store: newStore\r\n        })}\r\n    }\r\n\r\n    handleName = (index, value) => {\r\n        const newStore = this.state.store\r\n        newStore[index].name = value\r\n        this.setState({\r\n            store: newStore\r\n        })\r\n    }\r\n\r\n    handleRemove = (id) => {\r\n        if (window.confirm('Вы действительно хотите удалить строку?')) {\r\n        this.setState({\r\n            store: this.state.store.filter(item => item.id !== id)\r\n        }         \r\n    )}\r\n    }\r\n\r\n    render(){\r\n        let {line, store} = this.state \r\n        const {name} = this.props\r\n                                      \r\n    return <div className={classes.BalanceSection}>\r\n        <h1 className={classes.label}>{title(name)}</h1>\r\n        <ListItems \r\n            store={store}\r\n            onremove={this.handleRemove}\r\n            handleValue={this.handleValue} \r\n            handleName={this.handleName}\r\n            />\r\n        <div className={classes.total}>\r\n            <span className={classes.totalData}>ИТОГО</span>  \r\n            <span className={classes.totalData}>{total(store)} ₴</span>            \r\n        </div>    \r\n        <div  className={classes.edit}>\r\n            <Input size={'main'}\r\n                onChange={this.handleChange}\r\n                value={this.state.line}\r\n            />\r\n            <Button size={'main'}\r\n                onClick={() =>this.handleAdd(line)}\r\n                disabled={!line.trim() || includes(store, line)}\r\n                > \r\n                Добавить категорию {title(name).toLocaleLowerCase().slice(0, title(name).length-1)}ов\r\n            </Button>\r\n            <Button size={'main'}\r\n                onClick={() => {onSaveState(name, store)}}\r\n                >\r\n                Сохранить изменения   \r\n            </Button>    \r\n           \r\n        </div>\r\n     </div>\r\n    }\r\n}\r\n\r\nexport default BalanceSection ","import React from 'react';\r\nimport './App.css';\r\nimport BalanceSection from './Components/BalanceSection'\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n    <div className=\"App\">\r\n      <BalanceSection name={'Expenses'}/>\r\n      <BalanceSection name={'Income'} />\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}