{"version":3,"sources":["Components/BalanceSection/BalanceSection.module.css","Components/Item/Item.module.css","Components/UI/Input/Input.module.css","Components/UI/Button/Button.module.css","Components/Transcript/Transcript.module.css","Components/UI/Input/index.js","Components/UI/Button/index.js","Components/Transcript/index.js","Components/Item/index.js","Components/ListItems/index.js","Components/BalanceSection/functionInit.js","Components/BalanceSection/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","props","inputType","type","cls","classes","size","className","join","value","name","placeholder","onChange","Button","onClick","disabled","children","defaultProps","Transcript","handleValue","index","useState","setValue","e","target","Item","item","handleName","remove","visible","setVisible","Fragment","reduce","res","i","id","ListItems","store","onremove","map","key","initialStore","storeIncome","Date","now","storeExpenses","JSON","parse","localStorage","getItem","console","log","massage","removeItem","title","BalanceSection","state","line","handleChange","setState","reset","handleAdd","isNaN","newStore","push","handleRemove","window","confirm","filter","onSaveState","setItem","stringify","alert","total","this","label","edit","includes","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ff2f29a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BalanceSection\":\"BalanceSection_BalanceSection__2LE2G\",\"label\":\"BalanceSection_label__2OC1G\",\"edit\":\"BalanceSection_edit__3XlLd\",\"total\":\"BalanceSection_total__3lst0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Item_Item__3e7YM\",\"value\":\"Item_value__26SKM\",\"name\":\"Item_name__3s8Yo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1mwbt\",\"small\":\"Input_small__2EoZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1mrMq\",\"primary\":\"Button_primary__2nxhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Transcript\":\"Transcript_Transcript__3uOFr\"};","import React from 'react'\nimport classes from './Input.module.css'\n\n\n\nconst Input = props => {\n  \n  const inputType = props.type || 'text'\n  const cls = [classes.Input, classes[props.size]]\n  return (\n    <div className={cls.join(' ')}>\n      <input\n        type={inputType}\n        value={props.value}\n        name = {props.name}\n        placeholder = {props.placeholder}\n        onChange={props.onChange}\n        size = {props.size}\n        />\n    </div>\n  )\n}\n\nexport default Input","import React from 'react'\nimport classes from './Button.module.css'\n\nconst Button = props => {\n  const cls = [\n    classes.Button,\n    classes[props.type]\n  ]\n\n  return (\n    <button\n      onClick={props.onClick}\n      className={cls.join(' ')}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  onClick: () => {},\n  disabled: false,\n  type: 'primary'\n}\n\nexport default Button","import React, {useState} from 'react'\r\nimport classes from './Transcript.module.css'  \r\n\r\n\r\nconst Transcript = ({ handleValue, index}) => {\r\n    const [value, setValue] = useState(0)\r\n    \r\n    return <div className = {classes.Transcript} >\r\n        <span onClick = {() =>\r\n            {handleValue(index, value); setValue(0)} }\r\n            >добавить</span> \r\n        <input\r\n        type = 'text'\r\n        onChange = {(e) => setValue(e.target.value)}\r\n        value = {value}/>\r\n    </div>\r\n}   \r\n\r\n\r\n\r\nexport default Transcript\r\n","import React, {useState} from 'react'\r\nimport classes from './Item.module.css'\r\nimport Transcript from '../Transcript'\r\n\r\n\r\nconst Item = ({index, item, handleValue, handleName, remove}) => { \r\n    const [visible, setVisible] = useState(false)\r\n    \r\n    const total = () => item.value.reduce((res, i) => res += i, 0)\r\n        \r\n    return (\r\n    <React.Fragment>\r\n        <div className = {classes.Item}>\r\n            <div className = {classes.name}>\r\n                <span>{index + 1} &ensp;</span>\r\n                <input \r\n                    value = {item.name}\r\n                    onChange = {(e) => handleName(index, e.target.value)}\r\n                />\r\n            </div>\r\n            <div className = {classes.value}>\r\n                <span onClick = {() => setVisible(!visible)} >+</span>\r\n                <p>{total()}</p>\r\n                <span onClick = {() => remove(item.id)}>&times;</span>\r\n            </div>\r\n        </div> \r\n        { visible ? \r\n            <Transcript \r\n                handleValue = {handleValue}\r\n                index = {index}\r\n        /> : null}\r\n    </React.Fragment>)\r\n}      \r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport Item from '../Item'\r\nimport classes from './ListItems.module.css'\r\n\r\nconst ListItems = ({store, onremove, handleName, handleValue}) => \r\n    <div className = {classes.ListItems}>\r\n        {store.map((item, index) => \r\n        <Item key = {item.id}\r\n            remove = {onremove} \r\n            handleValue = {handleValue}\r\n            handleName = {handleName}\r\n            item = {item} \r\n            index = {index}\r\n            />)}\r\n    </div>\r\n\r\nexport default ListItems    \r\n\r\n","\r\nexport const initialStore = (name) => {\r\n\r\n    const storeIncome = [{name:'Зарплата', id: Date.now()+1, value: [0]},\r\n                {name:'Премии', id: Date.now()+2, value: [0]},\r\n                {name:'Подарки', id: Date.now()+3, value: [0]}]\r\n\r\n    const storeExpenses = [{name:'Продукты', id: Date.now()+4, value: [0]},\r\n                {name:'Квартплата', id: Date.now()+5, value: [0]},\r\n                {name:'Одежда', id: Date.now()+6, value: [0]}]\r\n        \r\n    try{\r\n        const store = JSON.parse(localStorage.getItem(`store${name}`))\r\n        return store ? store : name === 'Income' ? storeIncome : storeExpenses\r\n    } catch (e) {\r\n        console.log(e.massage)\r\n        localStorage.removeItem(`store${name}`)       \r\n    }\r\n}\r\nexport const title = (name) => name === 'Income' ? 'Доходы' : 'Расходы'  ","import React from 'react'\r\nimport Input from '../UI/Input'\r\nimport Button from '../UI/Button'\r\nimport ListItems from '../ListItems'\r\nimport { initialStore, title} from './functionInit'\r\n\r\nimport  classes from './BalanceSection.module.css'\r\n\r\nclass BalanceSection extends React.Component { \r\n\r\n    state = {\r\n        line: '',\r\n        store:  initialStore(this.props.name) || []\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            line: e.target.value\r\n        })\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            line: ''\r\n        })\r\n    }\r\n\r\n    handleAdd = (value) => {\r\n        this.setState({\r\n            store: [...this.state.store, {id: Date.now(), name: value, value: []}]\r\n        }, () => this.reset()\r\n        )\r\n    }\r\n\r\n    handleValue = ( index, value) => {\r\n        if(!isNaN(value)){\r\n        const newStore = this.state.store\r\n        newStore[index].value.push(+value)\r\n        this.setState({\r\n            store: newStore\r\n        })}\r\n    }\r\n\r\n    handleName = ( index, value) => {\r\n        const newStore = this.state.store\r\n        newStore[index].name = value\r\n        this.setState({\r\n            store: newStore\r\n        })\r\n    }\r\n\r\n    handleRemove = (id) => {\r\n        if (window.confirm('Вы действительно хотите удалить строку?')) {\r\n        this.setState({\r\n            store: this.state.store.filter(item => item.id !== id)\r\n        }         \r\n    )}\r\n    }\r\n\r\n    onSaveState = () => {\r\n        const {name} = this.props\r\n        localStorage.removeItem(`store${name}`)\r\n        localStorage.setItem(`store${name}`, JSON.stringify(this.state.store))\r\n        alert(`Раздел ${title(name)} успешно сохранен`)\r\n    }\r\n\r\n    total = () => this.state.store.reduce((res, i) =>\r\n         res += i.value.reduce((res, i) => res += i, 0), 0)\r\n       \r\n\r\n    render(){\r\n        let {line, store} = this.state \r\n              \r\n    return <div className = {classes.BalanceSection}>\r\n        <h1 className = {classes.label}>{title(this.props.name)}</h1>\r\n        <ListItems \r\n            store = {store}\r\n            onremove = {this.handleRemove}\r\n            handleValue = {this.handleValue} \r\n            handleName = {this.handleName}\r\n            />\r\n        <div className = {classes.total}>\r\n            <p>ИТОГО</p>  \r\n            <p>{this.total()} ₴</p>            \r\n        </div>    \r\n        <div  className = {classes.edit}>\r\n            <Input \r\n                onChange = {this.handleChange}\r\n                value = {this.state.line}\r\n            />\r\n            <Button \r\n                onClick = {() =>this.handleAdd(line)}\r\n                disabled = {!line || store.includes(line)}\r\n                > \r\n                Добавить категорию\r\n            </Button>\r\n            <Button\r\n                onClick = {this.onSaveState}\r\n                >\r\n                Сохранить изменения   \r\n            </Button>    \r\n           \r\n        </div>\r\n     </div>\r\n    }\r\n}\r\n\r\nexport default BalanceSection ","import React from 'react';\nimport './App.css';\nimport BalanceSection from './Components/BalanceSection'\n\nfunction App() {\n  return (\n    <React.Fragment>\n    <div className=\"App\">\n      <BalanceSection name = {'Expenses'}/>\n      <BalanceSection name = {'Income'} />\n    </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}